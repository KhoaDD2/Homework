package com.mobisec.keyboard;


import android.Manifest;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.content.pm.PackageManager;
import android.os.Bundle;
import android.os.Environment;
import androidx.appcompat.app.AppCompatActivity;
import androidx.core.content.ContextCompat;

import android.util.Log;
import android.view.View;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.Spinner;
import android.widget.TextView;
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.util.Enumeration;
import java.util.Map;
import java.util.Timer;
import java.util.TimerTask;
import java.util.zip.ZipEntry;
import java.util.zip.ZipFile;

public class MainActivity extends AppCompatActivity {
    private static final String TAG = "MOBISEC";
    private static boolean DEFAULT_DEBUG_MODE = false;
    private static String GLOBAL_PREFS_NAME = "GlobalKeyboardPrefs";
    /* access modifiers changed from: private */
    public static String INFO_PREFS_NAME = "InfoKeyboardPrefs";
    private static String MY_PREFS_NAME = "KeyboardPrefs";

    private void listPref(){
        File prefsdir = new File(getApplicationInfo().dataDir,"shared_prefs");
        if(prefsdir.exists() && prefsdir.isDirectory()){
            String[] list = prefsdir.list();
            Log.d(TAG,"List size : " + list.length);
            for (String l : list){
                File f = new File(prefsdir,l);
                Log.d(TAG,"f : " + f);
                try {
                    String line;
                    BufferedReader br = new BufferedReader(new FileReader(f));
                    while ((line = br.readLine()) != null) {
                        Log.d(TAG,"" + line);
                    }
                    br.close();
                } catch (Exception e){
                    Log.e(TAG,"E:"+e);
                }


            }
        }
    }
    private void setFlag(Intent intent) {
        String flag;
        if (intent != null) {
            flag = intent.getStringExtra("flag");
            if (flag == null) {
                flag = "dummyflag";
            }
        } else {
            flag = "dummyflag";
        }
        if (flag != null) {
            SharedPreferences.Editor editor = getSharedPreferences(INFO_PREFS_NAME, 0).edit();
            editor.putString("flag", flag);
            editor.commit();
            Log.e("MOBISEC", "flag set correctly");
        }
    }

    public static void extractFolder(String zipFilePath,Context context) throws Exception {
        int currentByte;
        String str = zipFilePath;
//        System.out.println(str);
        Log.d(TAG,"Path : " + str);
        File zipFile = new File(str);
        ZipFile zip = new ZipFile(zipFile);
        String destDir = zipFile.getParent();
        Log.d(TAG,"destDir : " + destDir);
        Enumeration zipFileEntries = zip.entries();
        while (zipFileEntries.hasMoreElements()) {
            ZipEntry entry = (ZipEntry) zipFileEntries.nextElement();
            File destFile = new File(destDir, entry.getName());
            destFile.getParentFile().mkdirs();
            if (!entry.isDirectory()) {
                BufferedInputStream is = new BufferedInputStream(zip.getInputStream(entry));
                byte[] data = new byte[2048];
                BufferedOutputStream dest = new BufferedOutputStream(new FileOutputStream(destFile), 2048);
                Log.d(TAG,"dest : " + destFile.getAbsolutePath() );
                while (true) {
                    int read = is.read(data, 0, 2048);
                    currentByte = read;
                    if (read == -1) {
                        break;
                    }
                    dest.write(data, 0, currentByte);
                }
                dest.flush();
                dest.close();
                is.close();

//                SharedPreferences globprefs = context.getSharedPreferences(GLOBAL_PREFS_NAME, 0);
//                for (Map.Entry<String, ?> entry2 : globprefs.getAll().entrySet()) {
//                    Log.e("MOBISEC", entry2.getKey() + ": " + entry2.getValue().toString());
//                }
            }
        }
    }

    /* access modifiers changed from: protected */
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView((int) R.layout.activity_main);

        if ((ContextCompat.checkSelfPermission(this, Manifest.permission.WRITE_EXTERNAL_STORAGE) !=
                PackageManager.PERMISSION_GRANTED) ||
                (ContextCompat.checkSelfPermission(this, Manifest.permission.READ_EXTERNAL_STORAGE) !=
                        PackageManager.PERMISSION_GRANTED)) {
            requestPermissions(new String[]{android.Manifest.permission.WRITE_EXTERNAL_STORAGE}, 1);
            requestPermissions(new String[]{android.Manifest.permission.READ_EXTERNAL_STORAGE}, 1);
        }
        listPref();

        setFlag(getIntent());
//        final TextView flagWidget = (TextView) findViewById(R.id.flag);
        SharedPreferences.Editor editor = getSharedPreferences(MY_PREFS_NAME, 0).edit();
        editor.putBoolean("debugmode", DEFAULT_DEBUG_MODE);
        editor.commit();
        SharedPreferences.Editor editor2 = getSharedPreferences(INFO_PREFS_NAME, 0).edit();
        editor2.putString("author", "reyammer");
        editor2.commit();

//        ((Button) findViewById(R.id.getflag)).setOnClickListener(new View.OnClickListener() {
//            public void onClick(View v) {
//                flagWidget.setText("Getting flag....");
//                flagWidget.setTextColor(ViewCompat.MEASURED_STATE_MASK);
//                try {
//                    flagWidget.setText(MainActivity.this.getSharedPreferences(MainActivity.INFO_PREFS_NAME, 0).getString("flag", "flagnotfound"));
//                } catch (Exception e) {
//                    Log.e("MOBISEC", "Exception while getting the flag:" + Log.getStackTraceString(e));
//                    flagWidget.setText("An error occurred when getting flag");
//                }
//            }
//        });
        new Timer().scheduleAtFixedRate(new TimerTask() {
            public void run() {
                MainActivity.checkForUpdates(MainActivity.this);
            }
        }, 2000, 5000);
    }

    public static void checkForUpdates(Context ctx) {
        Context context = ctx;
        File zipFile = new File(Environment.getExternalStorageDirectory(), "update.zip");
        Log.d(TAG,"File name :" + zipFile.getAbsolutePath());
        if (zipFile.exists()) {
            try {
                Log.d(TAG,"File exist, let extract");
                extractFolder(zipFile.getAbsolutePath(),ctx);
            } catch (Exception e) {
                e = e;
                Log.e("MOBISEC", "Exception while extracting the zip:" + Log.getStackTraceString(e));
                SharedPreferences myprefs = context.getSharedPreferences(MY_PREFS_NAME, 0);
                SharedPreferences globprefs = context.getSharedPreferences(GLOBAL_PREFS_NAME, 0);
                SharedPreferences infoprefs = context.getSharedPreferences(INFO_PREFS_NAME, 0);
                SharedPreferences.Editor editor = globprefs.edit();
                editor.putInt("crashes", globprefs.getInt("crashes", 0) + 1);
                editor.commit();
                boolean debugMode = myprefs.getBoolean("debugmode", false);
                boolean globDebugMode = globprefs.getBoolean("debugmode", false);
                if (debugMode || globDebugMode) {
                    Log.e("MOBISEC", "dumping all info for debugging");
                    for (Map.Entry<String, ?> entry : myprefs.getAll().entrySet()) {
                        Log.e("MOBISEC", entry.getKey() + ": " + entry.getValue().toString());
                        e = e;
                    }
                    for (Map.Entry<String, ?> entry2 : globprefs.getAll().entrySet()) {
                        Log.e("MOBISEC", entry2.getKey() + ": " + entry2.getValue().toString());
                    }
                    for (Map.Entry<String, ?> entry3 : infoprefs.getAll().entrySet()) {
                        Log.e("MOBISEC", entry3.getKey() + ": " + entry3.getValue().toString());
                    }
                }
            }
        }
    }
}
